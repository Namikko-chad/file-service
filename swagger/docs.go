// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Leonhard Schmidt",
            "url": "bloodheaven.net",
            "email": "bloodheaven.net@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/files": {
            "get": {
                "description": "List of files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "List of files",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit result in response",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset result in response",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.IOutputPagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/types.IOutputPaginationResult"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "rows": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/handlers.FileResponse"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Create file",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.IOutputOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/handlers.FileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.IOutputError"
                        }
                    }
                }
            }
        },
        "/files/:fileId": {
            "get": {
                "description": "Retrieve file",
                "tags": [
                    "files"
                ],
                "summary": "Retrieve file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FileId",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update file",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Update file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FileId",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Public",
                        "name": "public",
                        "in": "body",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.IOutputEmpty"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete file",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Delete file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FileId",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.IOutputEmpty"
                        }
                    }
                }
            }
        },
        "/files/:fileId/info": {
            "get": {
                "description": "Retrieve file info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Retrieve file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FileId",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.IOutputOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/handlers.FileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.FileResponse": {
            "type": "object",
            "properties": {
                "ext": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "types.IOutputEmpty": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "types.IOutputError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "types.IOutputOk": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                },
                "result": {}
            }
        },
        "types.IOutputPagination": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/types.IOutputPaginationResult"
                }
            }
        },
        "types.IOutputPaginationResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "rows": {
                    "type": "array",
                    "items": {}
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "File-Service",
	Description:      "File-Service for store files.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
