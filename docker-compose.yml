version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: namikko/file-service
    container_name: file-service
    restart: unless-stopped
    env_file: .env
    environment:
      - SERVER_HOST=$SERVER_HOST
      - SERVER_PORT=$SERVER_PORT
      - SERVER_SHUTDOWN_TIMEOUT=$SERVER_SHUTDOWN_TIMEOUT
      - CORS_ORIGINS=$CORS_ORIGINS
      - CORS_METHODS=$CORS_METHODS
      - DOMAIN_NAME=$DOMAIN_NAME
      - DATABASE_LINK=$DATABASE_LINK
    ports:
      - "3050:3050"
    depends_on:
      - "postgres"
    networks:
      - fs_network

  postgres:
    container_name: postgres_container
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    ports:
      - "5432:5432"
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_USER: "fs"
      POSTGRES_PASSWORD: "fs"
      POSTGRES_DB: "fs"
    volumes:
      - .:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - fs_network

networks:
  fs_network:
    driver: bridge